service: echo

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'prod'}
  timeout: 20
  region: eu-west-1
  apiGateway:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - ${ssm:/echo/ddb/podcasts/arn}
        - ${ssm:/echo/ddb/episodes/arn}
        - ${ssm:/echo/ddb/users/arn}
        - ${ssm:/echo/ddb/notifications/arn}
        - ${ssm:/echo/ddb/passwords/arn}
    - Effect: 'Allow'
      Action:
        - 'sns:Publish'
      Resource:
        - ${ssm:/echo/sns/parser/arn}
        - ${ssm:/echo/sns/resize/arn}
        - ${ssm:/echo/sns/clientpush/arn}
    - Effect: Allow
      Action:
        - s3:*
      Resource: '*'
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource: '*'
  environment:
    stage: ${self:provider.stage}
    PI_API_KEY: ${ssm:/echo/pi/key}
    PI_API_SECRET: ${ssm:/echo/pi/secret~true}
    PARSER_SNS: ${ssm:/echo/sns/parser/arn}
    RESIZE_SNS: ${ssm:/echo/sns/resize/arn}
    NOTIFY_SNS: ${ssm:/echo/sns/clientpush/arn}
    PARSER_AUTH: ${ssm:/parser/auth~true}
    GOOGLE_ID: ${ssm:/echo/google/id}
    GOOGLE_SECRET: ${ssm:/echo/google/secret~true}
    PUBLIC_KEY: ${ssm:/echo/api/PublicKey}
    PRIVATE_KEY: ${ssm:/echo/api/PrivateKey~true}
    PHOTON_URL: ${ssm:/echo/photon/url}
    HASH_ARN: ${ssm:/echo/password/lambda/arn}
    HASH_SECRET: ${ssm:/password/auth~true}

functions:
  echo:
    handler: src/handler.echo
    events:
      - http:
          path: /
          method: post
          cors:
            origins:
              - http://localhost:3000
              - https://picast.app
              - https://*.picast.app
            allowCredentials: true
      - http:
          path: /
          method: get
          cors:
            origins:
              - http://localhost:3000
              - https://picast.app
              - https://*.picast.app

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 7000
    host: 0.0.0.0
    noPrependStageInUrl: true
  webpack:
    webpackConfig: 'webpack.config.js'
    packager: 'npm'
    includeModules: true
